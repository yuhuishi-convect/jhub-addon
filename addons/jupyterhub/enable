#!/usr/bin/env bash

set -e

source $SNAP/actions/common/utils.sh

NAMESPACE_JHUB="jhub"

JHUB_HELM_VERSION="1.2.0"

KUBECTL="$SNAP/kubectl --kubeconfig=${SNAP_DATA}/credentials/client.config"

"$SNAP/microk8s-enable.wrapper" helm3

HELM="$SNAP_DATA/bin/helm3 --kubeconfig=$SNAP_DATA/credentials/client.config"

VALUES=""

# get the options
while getopts ":v:f:h:" flag; do
  case "${flag}" in
          v) JHUB_HELM_VERSION=${OPTARG}
             ;;
          f) VALUES=${OPTARG}
             ;;
          *) echo "Usage: microk8s enable jupyterhub"
             echo ""
             echo "With overwriting default values: microk8s enable jupyterhub -f values.yaml"
             echo ""
             echo "See https://zero-to-jupyterhub.readthedocs.io/en/latest/resources/reference.html for more information about the values"
             echo "You should enable the Ingress addon, if you want to use JupyterHub with an Ingress"
             echo "microk8s enable ingress"
             exit 0
             ;;
  esac
done

echo "Installing JupyterHub (Helm v${JHUB_HELM_VERSION})"

if [ -n "$VALUES" ]; then
    echo "Using values file: $VALUES"
fi


# make sure the "jhub" namespace exists
$KUBECTL create namespace "$NAMESPACE_JHUB" > /dev/null 2>&1 || true

# add the JupyterHub chart repository
$HELM repo add jupyterhub https://jupyterhub.github.io/helm-chart/

# install the helm chart
if [ -z "$VALUES" ]
then
    $HELM upgrade -i jhub jupyterhub/jupyterhub \
      --version $JHUB_HELM_VERSION \
      --namespace "$NAMESPACE_JHUB"
else
    $HELM upgrade -i jhub jupyterhub/jupyterhub \
      --version $JHUB_HELM_VERSION \
      --namespace "$NAMESPACE_JHUB" \
      -f $VALUES
fi

echo "JupyterHub is installed"